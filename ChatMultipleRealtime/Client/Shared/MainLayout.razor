@inherits LayoutComponentBase
@using System.ComponentModel
@inject IJSRuntime JsRuntime
@inject NavigationManager navigationManager
@implements IDisposable
<CascadingValue Value="AuthenticationState" Name="AuthenticationState">
<div class="container-fluid">
@Body
</div>
</CascadingValue>
@code{
    public AuthenticationState AuthenticationState{get;set;}=new();
    protected async override Task OnInitializedAsync()
    {
        var authStateJson = await JsRuntime.InvokeAsync<string>("window.getFromStorage", AuthenticationState.AuthStoreKey);
        if (!string.IsNullOrWhiteSpace(authStateJson))
        {
            var authState = JsonConverter.Deserialize<AuthResponseDto>(authStateJson);
            AuthenticationState.LoadState(authState);
            if (AuthenticationState.IsAuthenticated)
            {
                navigationManager.NavigateTo("/chat");
            }
        }
        AuthenticationState.PropertyChanged += AuthenticationStateChanged;
    }
    private void AuthenticationStateChanged(object? sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(AuthenticationState.IsAuthenticated))
        {
            if (AuthenticationState.IsAuthenticated)
            {
                navigationManager.NavigateTo("/chat");
            }
            else
            {
                navigationManager.NavigateTo("/"); 
            }  
        }
    }
    public void Dispose(){
        AuthenticationState.PropertyChanged -= AuthenticationStateChanged;
    }
}